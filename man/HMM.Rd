% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HMMclass.R
\name{HMM}
\alias{HMM}
\title{The hidden markov model}
\usage{
HMM(initial_dist,transmission , emis_names, parameterlist)
}
\arguments{
\item{initial_dist}{numerical vector of the stationary distribution}

\item{transmission}{numerical matrix containing the transmission probabilities}

\item{emis_names}{vector of names for emission functions}

\item{parameterlist}{list of list, where each list containing the parameters needed in the corresponding emission function}

\item{state_names}{vector of names for each state}

\item{parm1}{vector of parameters}

\item{parm2}{vector of parameters}
}
\value{
A HMM class object
}
\description{
A S3 class that can be used to define a hidden markov model, which can then be used by the ther functions in this package.
}
\details{
The user will have to define parameters behind this model. This would be the initial distribution, transmission matrix and the distribution 
of each hidden state with its parameters. The distribution will come as a vector 
of strings, where each string is the name of the density function to be used 
for that hidden state. If only one string is defined, then that one will be used as the distribtuion for all the hidden states.

The user has two ways to define what parameters the density functions will use. If the density only need up 
to two different parameters, then the variables parm1 and parm2 can be used. They can either be a vector where each value will be a parameter
in the corresponding distribution or if the same value should be a parameter in each of the distribution then a single value will work.  

Alternativly the user can also give the parameters in a list of lists, where the internal list each contain all the parameters needed for the corresponding distribution.


The class has its own print function, which will 
print out the parameter for the HHM. The user can use their own density function, 
if R does not have then one they want to use. However then it will be required 
that the function is defined in the current environment. To ensure this it may 
be necessary for the users custom function to be defined in the same 
environment as the HMM function. 
 
Here it is important to note that if the user specify their own
distribution function, then it is necessary for the quantile parameter to be called x.
}
\examples{
X <- earthquakes$n
delta = c(0.5,0.5)
trans=matrix(c(0.9,0.1,0.1,0.9),2,2)
HM = HMM(initial_dist = delta,transmission = trans,  
emis_names = "dpois",parameterslist = list(list(lambda=10),
list(lambda=30)) )
HM
}
