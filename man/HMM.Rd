% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HMMclass.R
\name{HMM}
\alias{HMM}
\title{The hidden markov model}
\usage{
HMM(stationary_dist,transmission , emission_function_names, parameters)
}
\arguments{
\item{stationary_dist}{numerical vector of the stationary distribution}

\item{transmision}{numerical matrix containing the transmission probabilities}

\item{emission_function_names}{vector of names for emission functions}

\item{parameters}{list of list, where each list containing the parameters need in the emision functions}

\item{state_names}{vector of names for each state}
}
\value{
A  HMM class object
}
\description{
A S3 class that can be used to define a hidden markov model, which can then be used by the ther functions in this package.
}
\details{
The user will have to define parameters behind this model. This would be the stationary distribution, transmission matrix and the distribution 
of each hidden state with its parameters. The distribution will come as a vector 
of strings, where each string is the name of the density function to be used 
for that hidden state. The parameters for each hidden state are kept in a list 
of list, where each list contain the named parameters for the relevant distribution. 
It is important that they are named, as this allow the do.call function to use parameters 
in the distribution function. The class has its own print function, which will 
print out the parameter for the HHM. The user can use their own density function, 
if R does not have  then one they want to use. However then it will be required 
that the function is defined in the current environment as the function "get", 
is used to get the function. Here it is important to note that if the user specify their own
distribution function, then it is necessary for the quantile parameter to be called x.
}
\examples{
ddnorm = function(x,mean,sd){return(x+mean+sd)}
delta = c(0.3,0.7)
MM= matrix(c(1,2,3,4),2,2)
nn= c("ddnorm","dnorm")
parameters = list(list(mean=5,sd=2),list(mean=4,sd=3))
HM = HMM(stationary_dist=delta,transmision =MM,emission_function_names=nn,parameters =parameters)
params <- tibble(param= list(list(mean=5, sd=4),list(mean=3, sd=2)))
PP = HM$param
func= HM$emission_func
do.call(func[[1]], c(x=1, PP[[1]]))
do.call(func[[2]], c(x=1, PP[[2]]))
}
